permissions:
  contents: write
  actions: read
  checks: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  statuses: write

on:
  release:
    types: [created]

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: 
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libxkbcommon-x11-0 \
          libglib2.0-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libatk1.0-dev \
          libgdk-pixbuf2.0-dev \
          libwebkit2gtk-4.0-dev \
          libgtk-3-dev \
          build-essential \
          gcc-mingw-w64 \
          g++-mingw-w64 \
          zip  # Add this line to install zip
  
      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Verify installed dependencies
        run: |
          ldconfig -p | grep xkbcommon
          ldconfig -p | grep libGL
          ldconfig -p | grep libGLU
          ldconfig -p | grep libatk-1.0.so.0
          ldconfig -p | grep libgdk_pixbuf-2.0.so.0
          ldconfig -p | grep libwebkit2gtk-4.0.so.37
          ldconfig -p | grep libgtk-3.so.0

      - name: Compile the app
        run: |
          echo "Compiling for target: ${{ matrix.target }}"
          RUST_BACKTRACE=1 cargo build --release --target ${{ matrix.target }}

      - name: List build artifacts
        run: |
          echo "Listing files in target/${{ matrix.target }}/release/"
          ls -R target/${{ matrix.target }}/release/

      - name: Create zip archive
        run: |
          release_tag=${{ github.event.release.tag_name }}
          zip_file=camu_${{ matrix.target }}_${release_tag}.zip
          if [ ${{ matrix.target }} = "x86_64-pc-windows-gnu" ]; then
            zip $zip_file target/${{ matrix.target }}/release/camu.exe
          elif [ ${{ matrix.target }} = "x86_64-unknown-linux-gnu" ]; then
            zip $zip_file target/${{ matrix.target }}/release/camu
          fi

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: camu_${{ matrix.target }}_${{ github.event.release.tag_name }}.zip
          asset_name: camu_${{ matrix.target }}_${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
